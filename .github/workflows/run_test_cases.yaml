name: Run test case

on:
  push:

  release:
    types:
      - published
  pull_request:
  workflow_dispatch:
  repository_dispatch:
    types: [run_actions]

jobs:
    run_test_case:
        runs-on: ubuntu-20.04

        steps:
        - uses: actions/checkout@v2
        - name: set up
          env:
            MYSQL_TAG: 8
            REDIS_TAG: 6
            MONGO_TAG: 4
            PGSQL_TAG: 13
            LDAP_TAG: 2.4.50
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          run: |
            docker-compose -f .ci/apps_tests/docker-compose.yaml build --no-cache
            docker-compose -f .ci/apps_tests/docker-compose.yaml up -d

        - name: run tests
          run: |
            export EMQX_AUTH__LDAP__SERVERS=ldap_server \
                   EMQX_AUTH__MONGO__SERVER=mongo_server:27017 \
                   EMQX_AUTH__REDIS__SERVER=redis_server:6379 \
                   EMQX_AUTH__MYSQL__SERVER=mysql_server:3306 \
                   EMQX_AUTH__MYSQL__USERNAME=root \
                   EMQX_AUTH__MYSQL__PASSWORD=public \
                   EMQX_AUTH__MYSQL__DATABASE=mqtt \
                   EMQX_AUTH__PGSQL__SERVER=pgsql_server:5432 \
                   EMQX_AUTH__PGSQL__USERNAME=root \
                   EMQX_AUTH__PGSQL__PASSWORD=public \
                   EMQX_AUTH__PGSQL__DATABASE=mqtt \
                   CUTTLEFISH_ENV_OVERRIDE_PREFIX=EMQX_
            printenv > .env
            docker exec -i erlang bash -c "make xref"
            docker exec --env-file .env -i erlang bash -c "make ct"
            docker exec -i erlang bash -c "make cover"
            docker exec -i erlang bash -c "make coveralls"
        - uses: actions/upload-artifact@v1
          if: failure()
          with:
            name: logs
            path: _build/test/logs
        - uses: actions/upload-artifact@v1
          with:
            name: cover
            path: _build/test/cover
